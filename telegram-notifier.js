// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    botToken: '7433469523:AAE94asxAzaO_4p-G9Z2dhzxJKaV_Q1n76s',
    chatId: '5466961396'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ
async function collectVisitorInfo() {
    const parser = new UAParser();
    const uaResult = parser.getResult();
    
    const baseInfo = {
        userAgent: navigator.userAgent,
        screenWidth: window.screen.width,
        screenHeight: window.screen.height,
        language: navigator.language,
        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
        currentTime: new Date().toLocaleString(),
        pageUrl: window.location.href,
        referrer: document.referrer || '–ü—Ä—è–º–æ–π –∑–∞—Ö–æ–¥',
        browser: `${uaResult.browser.name} ${uaResult.browser.version}`,
        os: `${uaResult.os.name} ${uaResult.os.version}`,
        deviceType: uaResult.device.type || 'desktop',
        deviceModel: uaResult.device.model || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ',
        cpuArch: uaResult.cpu.architecture || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'
    };

    try {
        const geoResponse = await fetch('http://ip-api.com/json/?fields=status,message,country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,query');
        const geoData = await geoResponse.json();
        
        if (geoData.status === 'success') {
            baseInfo.geo = {
                ip: geoData.query,
                country: geoData.country,
                countryCode: geoData.countryCode,
                region: geoData.regionName,
                city: geoData.city,
                zip: geoData.zip,
                coordinates: `${geoData.lat}, ${geoData.lon}`,
                isp: geoData.isp,
                org: geoData.org,
                as: geoData.as
            };
        }
    } catch (error) {
        baseInfo.geo = {
            ip: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å',
            error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–¥–∞–Ω–Ω—ã–µ'
        };
    }

    return baseInfo;
}

function formatTelegramMessage(info) {
    let geoInfo = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å';
    if (info.geo && info.geo.ip !== '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å') {
        geoInfo = `üìç ${info.geo.city}, ${info.geo.country} (${info.geo.countryCode})\n` +
                 `üåê IP: ${info.geo.ip}\n` +
                 `üõ∞ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${info.geo.isp}\n` +
                 `üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${info.geo.org || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
                 `üó∫ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${info.geo.coordinates || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã'}`;
    } else {
        geoInfo = `üåê IP: ${info.geo?.ip || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å'}`;
    }

    const deviceInfo = `üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${info.deviceType === 'mobile' ? '–ú–æ–±–∏–ª—å–Ω–æ–µ' : 
                      info.deviceType === 'tablet' ? '–ü–ª–∞–Ω—à–µ—Ç' : '–ö–æ–º–ø—å—é—Ç–µ—Ä'}\n` +
                     (info.deviceModel !== '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ' ? `üì± –ú–æ–¥–µ–ª—å: ${info.deviceModel}\n` : '') +
                     `üíª –û–°: ${info.os}\n` +
                     `üñ• –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ${info.cpuArch}\n` +
                     `üîç –ë—Ä–∞—É–∑–µ—Ä: ${info.browser}\n` +
                     `üñ• –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${info.screenWidth}x${info.screenHeight}`;

    return `üîî –ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Pe4henika!\n\n` +
           `üïí –í—Ä–µ–º—è: ${info.currentTime}\n\n` +
           `${geoInfo}\n\n` +
           `${deviceInfo}\n\n` +
           `üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${info.pageUrl}\n` +
           `üîó –ò—Å—Ç–æ—á–Ω–∏–∫: ${info.referrer}\n` +
           `üåç –Ø–∑—ã–∫: ${info.language}\n` +
           `‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${info.timezone}`;
}

async function sendTelegramNotification(message) {
    try {
        const url = `https://api.telegram.org/bot${config.botToken}/sendMessage`;
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: config.chatId,
                text: message,
                parse_mode: 'HTML',
                disable_notification: false
            })
        });
        
        const data = await response.json();
        console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', data);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
}

async function trackVisitor() {
    const visitorInfo = await collectVisitorInfo();
    const message = formatTelegramMessage(visitorInfo);
    await sendTelegramNotification(message);
}

document.addEventListener('DOMContentLoaded', trackVisitor);